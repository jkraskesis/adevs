This file contains instructions for building the C++ library.
Development versions of this library are available 
from github. The SourceForge repository for adevs is
defunct.

TODO: UPDATE ALL OF THIS INFORMATION

---- C++ -----
Adevs is implemented primarily as a set of C++ header files,
and for many applications these are sufficient. The rest of
the simulation engine is in the static library file 'libadevs.a'.
To build this library file this, go to the directory called 'src'
and run 'make'. The default options for the compiler should
work if you are using the GNU g++ compiler. For other compilers,
you make set options, build commands, etc. by editing the Makefile.

If you are using Visual Studio and Windows, then to build the
static library do the following: 1) open a command shell, 2) go the
'src' directory, and 3) run the batch file 'build.bat'. This 
creates a static library to link with your simulation applications.

---- FMI ----
Adevs supports importing models that use the FMI standard for Model
Exchange. Information about this standard can be found at
http://www.fmi-standard.org. This feature is particularly useful
for importing continuous system models built with the Modelica
language into your discrete event simulation. The examples and
test cases shipped with adevs assume that you have the 
OpenModelica compiler installed. 

---- Testing -----
There are four sets of test cases that can be run from the
directory 'test'. The first set are for the C++ library without
and these tests are run with 'make check_cpp'.
The fmi import support can be
tested by executing 'make check_fmi'. Executing 'make check'
runs all of the test cases.

The make.common file contains platform specific settings for
the test scripts. It is setup by default for a GNU/Linux type of
environment. Change as needed for your environment, but if you are
using a more or less typical Linux distribution then the defaults
should work fine.

For the FMI test cases, you will need to have the OpenModelica compiler
installed.
